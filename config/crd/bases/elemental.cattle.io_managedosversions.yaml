---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: managedosversions.elemental.cattle.io
spec:
  group: elemental.cattle.io
  names:
    kind: ManagedOSVersion
    listKind: ManagedOSVersionList
    plural: managedosversions
    singular: managedosversion
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              metadata:
                x-kubernetes-preserve-unknown-fields: true
              minVersion:
                type: string
              type:
                type: string
              upgradeContainer:
                description: ContainerSpec is a simplified container template.
                properties:
                  args:
                    items:
                      type: string
                    type: array
                  command:
                    items:
                      type: string
                    type: array
                  envFrom:
                    items:
                      description: EnvFromSource represents the source of a set of
                        ConfigMaps
                      properties:
                        configMapRef:
                          description: The ConfigMap to select from
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                            optional:
                              description: Specify whether the ConfigMap must be defined
                              type: boolean
                          type: object
                          x-kubernetes-map-type: atomic
                        prefix:
                          description: An optional identifier to prepend to each key
                            in the ConfigMap. Must be a C_IDENTIFIER.
                          type: string
                        secretRef:
                          description: The Secret to select from
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                            optional:
                              description: Specify whether the Secret must be defined
                              type: boolean
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    type: array
                  envs:
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    type: string
                  securityContext:
                    description: |-
                      SecurityContext holds security configuration that will be applied to a container.
                      Some fields are present in both SecurityContext and PodSecurityContext.  When both
                      are set, the values in SecurityContext take precedence.
                    properties:
                      allowPrivilegeEscalation:
                        description: |-
                          AllowPrivilegeEscalation controls whether a process can gain more
                          privileges than its parent process. This bool directly controls if
                          the no_new_privs flag will be set on the container process.
                          AllowPrivilegeEscalation is true always when the container is:
                          1) run as Privileged
                          2) has CAP_SYS_ADMIN
                          Note that this field cannot be set when spec.os.name is windows.
                        type: boolean
                      capabilities:
                        description: |-
                          The capabilities to add/drop when running containers.
                          Defaults to the default set of capabilities granted by the container runtime.
                          Note that this field cannot be set when spec.os.name is windows.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                        type: object
                      privileged:
                        description: |-
                          Run container in privileged mode.
                          Processes in privileged containers are essentially equivalent to root on the host.
                          Defaults to false.
                          Note that this field cannot be set when spec.os.name is windows.
                        type: boolean
                      procMount:
                        description: |-
                          procMount denotes the type of proc mount to use for the containers.
                          The default is DefaultProcMount which uses the container runtime defaults for
                          readonly paths and masked paths.
                          This requires the ProcMountType feature flag to be enabled.
                          Note that this field cannot be set when spec.os.name is windows.
                        type: string
                      readOnlyRootFilesystem:
                        description: |-
                          Whether this container has a read-only root filesystem.
                          Default is false.
                          Note that this field cannot be set when spec.os.name is windows.
                        type: boolean
                      runAsGroup:
                        description: |-
                          The GID to run the entrypoint of the container process.
                          Uses runtime default if unset.
                          May also be set in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: |-
                          Indicates that the container must run as a non-root user.
                          If true, the Kubelet will validate the image at runtime to ensure that it
                          does not run as UID 0 (root) and fail to start the container if it does.
                          If unset or false, no such validation will be performed.
                          May also be set in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: |-
                          The UID to run the entrypoint of the container process.
                          Defaults to user specified in image metadata if unspecified.
                          May also be set in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: |-
                          The SELinux context to be applied to the container.
                          If unspecified, the container runtime will allocate a random SELinux context for each
                          container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: |-
                          The seccomp options to use by this container. If seccomp options are
                          provided at both the pod & container level, the container options
                          override the pod options.
                          Note that this field cannot be set when spec.os.name is windows.
                        properties:
                          localhostProfile:
                            description: |-
                              localhostProfile indicates a profile defined in a file on the node should be used.
                              The profile must be preconfigured on the node to work.
                              Must be a descending path, relative to the kubelet's configured seccomp profile location.
                              Must be set if type is "Localhost". Must NOT be set for any other type.
                            type: string
                          type:
                            description: |-
                              type indicates which kind of seccomp profile will be applied.
                              Valid options are:


                              Localhost - a profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile should be used.
                              Unconfined - no profile should be applied.
                            type: string
                        required:
                        - type
                        type: object
                      windowsOptions:
                        description: |-
                          The Windows specific settings applied to all containers.
                          If unspecified, the options from the PodSecurityContext will be used.
                          If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is linux.
                        properties:
                          gmsaCredentialSpec:
                            description: |-
                              GMSACredentialSpec is where the GMSA admission webhook
                              (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                              GMSA credential spec named by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: |-
                              HostProcess determines if a container should be run as a 'Host Process' container.
                              All of a Pod's containers must have the same effective HostProcess value
                              (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                              In addition, if HostProcess is true then HostNetwork must also be set to true.
                            type: boolean
                          runAsUserName:
                            description: |-
                              The UserName in Windows to run the entrypoint of the container process.
                              Defaults to the user specified in image metadata if unspecified.
                              May also be set in PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                            type: string
                        type: object
                    type: object
                  volumes:
                    items:
                      properties:
                        destination:
                          type: string
                        name:
                          type: string
                        source:
                          type: string
                      type: object
                    type: array
                type: object
              version:
                type: string
            type: object
          status:
            properties:
              conditions:
                description: |-
                  Conditions is a list of Wrangler conditions that describe the state
                  of the bundle.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of cluster condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              display:
                description: |-
                  Display contains the number of ready, desiredready clusters and a
                  summary state for the bundle's resources.
                properties:
                  readyClusters:
                    description: |-
                      ReadyClusters is a string in the form "%d/%d", that describes the
                      number of clusters that are ready vs. the number of clusters desired
                      to be ready.
                    nullable: true
                    type: string
                  state:
                    description: State is a summary state for the bundle, calculated
                      over the non-ready resources.
                    nullable: true
                    type: string
                type: object
              maxNew:
                description: |-
                  MaxNew is always 50. A bundle change can only stage 50
                  bundledeployments at a time.
                type: integer
              maxUnavailable:
                description: |-
                  MaxUnavailable is the maximum number of unavailable deployments. See
                  rollout configuration.
                type: integer
              maxUnavailablePartitions:
                description: |-
                  MaxUnavailablePartitions is the maximum number of unavailable
                  partitions. The rollout configuration defines a maximum number or
                  percentage of unavailable partitions.
                type: integer
              newlyCreated:
                description: |-
                  NewlyCreated is the number of bundle deployments that have been created,
                  not updated.
                type: integer
              observedGeneration:
                description: ObservedGeneration is the current generation of the bundle.
                format: int64
                type: integer
              partitions:
                description: PartitionStatus lists the status of each partition.
                items:
                  description: PartitionStatus is the status of a single rollout partition.
                  properties:
                    count:
                      description: Count is the number of clusters in the partition.
                      type: integer
                    maxUnavailable:
                      description: MaxUnavailable is the maximum number of unavailable
                        clusters in the partition.
                      type: integer
                    name:
                      description: Name is the name of the partition.
                      nullable: true
                      type: string
                    summary:
                      description: Summary is a summary state for the partition, calculated
                        over its non-ready resources.
                      properties:
                        desiredReady:
                          description: |-
                            DesiredReady is the number of bundle deployments that should be
                            ready.
                          type: integer
                        errApplied:
                          description: |-
                            ErrApplied is the number of bundle deployments that have been synced
                            from the Fleet controller and the downstream cluster, but with some
                            errors when deploying the bundle.
                          type: integer
                        modified:
                          description: |-
                            Modified is the number of bundle deployments that have been deployed
                            and for which all resources are ready, but where some changes from the
                            Git repository have not yet been synced.
                          type: integer
                        nonReadyResources:
                          description: |-
                            NonReadyClusters is a list of states, which is filled for a bundle
                            that is not ready.
                          items:
                            description: |-
                              NonReadyResource contains information about a bundle that is not ready for a
                              given state like "ErrApplied". It contains a list of non-ready or modified
                              resources and their states.
                            properties:
                              bundleState:
                                description: State is the state of the resource, like
                                  e.g. "NotReady" or "ErrApplied".
                                nullable: true
                                type: string
                              message:
                                description: Message contains information why the
                                  bundle is not ready.
                                nullable: true
                                type: string
                              modifiedStatus:
                                description: ModifiedStatus lists the state for each
                                  modified resource.
                                items:
                                  description: |-
                                    ModifiedStatus is used to report the status of a resource that is modified.
                                    It indicates if the modification was a create, a delete or a patch.
                                  properties:
                                    apiVersion:
                                      nullable: true
                                      type: string
                                    delete:
                                      type: boolean
                                    kind:
                                      nullable: true
                                      type: string
                                    missing:
                                      type: boolean
                                    name:
                                      nullable: true
                                      type: string
                                    namespace:
                                      nullable: true
                                      type: string
                                    patch:
                                      nullable: true
                                      type: string
                                  type: object
                                type: array
                              name:
                                description: Name is the name of the resource.
                                nullable: true
                                type: string
                              nonReadyStatus:
                                description: NonReadyStatus lists the state for each
                                  non-ready resource.
                                items:
                                  description: NonReadyStatus is used to report the
                                    status of a resource that is not ready. It includes
                                    a summary.
                                  properties:
                                    apiVersion:
                                      nullable: true
                                      type: string
                                    kind:
                                      nullable: true
                                      type: string
                                    name:
                                      nullable: true
                                      type: string
                                    namespace:
                                      nullable: true
                                      type: string
                                    summary:
                                      properties:
                                        error:
                                          type: boolean
                                        message:
                                          items:
                                            type: string
                                          type: array
                                        state:
                                          type: string
                                        transitioning:
                                          type: boolean
                                      type: object
                                    uid:
                                      description: |-
                                        UID is a type that holds unique ID values, including UUIDs.  Because we
                                        don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                                        intent and helps make sure that UIDs and names do not get conflated.
                                      nullable: true
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        notReady:
                          description: |-
                            NotReady is the number of bundle deployments that have been deployed
                            where some resources are not ready.
                          type: integer
                        outOfSync:
                          description: |-
                            OutOfSync is the number of bundle deployments that have been synced
                            from Fleet controller, but not yet by the downstream agent.
                          type: integer
                        pending:
                          description: |-
                            Pending is the number of bundle deployments that are being processed
                            by Fleet controller.
                          type: integer
                        ready:
                          description: |-
                            Ready is the number of bundle deployments that have been deployed
                            where all resources are ready.
                          type: integer
                        waitApplied:
                          description: |-
                            WaitApplied is the number of bundle deployments that have been
                            synced from Fleet controller and downstream cluster, but are waiting
                            to be deployed.
                          type: integer
                      type: object
                    unavailable:
                      description: Unavailable is the number of unavailable clusters
                        in the partition.
                      type: integer
                  type: object
                type: array
              resourceKey:
                description: |-
                  ResourceKey lists resources, which will likely be deployed. The
                  actual list of resources on a cluster might differ, depending on the
                  helm chart, value templating, etc..
                items:
                  description: ResourceKey lists resources, which will likely be deployed.
                  properties:
                    apiVersion:
                      description: APIVersion is the k8s api version of the resource.
                      nullable: true
                      type: string
                    kind:
                      description: Kind is the k8s api kind of the resource.
                      nullable: true
                      type: string
                    name:
                      description: Name is the name of the resource.
                      nullable: true
                      type: string
                    namespace:
                      description: Namespace is the namespace of the resource.
                      nullable: true
                      type: string
                  type: object
                type: array
              resourcesSha256Sum:
                description: ResourcesSHA256Sum corresponds to the JSON serialization
                  of the .Spec.Resources field
                type: string
              summary:
                description: |-
                  Summary contains the number of bundle deployments in each state and
                  a list of non-ready resources.
                properties:
                  desiredReady:
                    description: |-
                      DesiredReady is the number of bundle deployments that should be
                      ready.
                    type: integer
                  errApplied:
                    description: |-
                      ErrApplied is the number of bundle deployments that have been synced
                      from the Fleet controller and the downstream cluster, but with some
                      errors when deploying the bundle.
                    type: integer
                  modified:
                    description: |-
                      Modified is the number of bundle deployments that have been deployed
                      and for which all resources are ready, but where some changes from the
                      Git repository have not yet been synced.
                    type: integer
                  nonReadyResources:
                    description: |-
                      NonReadyClusters is a list of states, which is filled for a bundle
                      that is not ready.
                    items:
                      description: |-
                        NonReadyResource contains information about a bundle that is not ready for a
                        given state like "ErrApplied". It contains a list of non-ready or modified
                        resources and their states.
                      properties:
                        bundleState:
                          description: State is the state of the resource, like e.g.
                            "NotReady" or "ErrApplied".
                          nullable: true
                          type: string
                        message:
                          description: Message contains information why the bundle
                            is not ready.
                          nullable: true
                          type: string
                        modifiedStatus:
                          description: ModifiedStatus lists the state for each modified
                            resource.
                          items:
                            description: |-
                              ModifiedStatus is used to report the status of a resource that is modified.
                              It indicates if the modification was a create, a delete or a patch.
                            properties:
                              apiVersion:
                                nullable: true
                                type: string
                              delete:
                                type: boolean
                              kind:
                                nullable: true
                                type: string
                              missing:
                                type: boolean
                              name:
                                nullable: true
                                type: string
                              namespace:
                                nullable: true
                                type: string
                              patch:
                                nullable: true
                                type: string
                            type: object
                          type: array
                        name:
                          description: Name is the name of the resource.
                          nullable: true
                          type: string
                        nonReadyStatus:
                          description: NonReadyStatus lists the state for each non-ready
                            resource.
                          items:
                            description: NonReadyStatus is used to report the status
                              of a resource that is not ready. It includes a summary.
                            properties:
                              apiVersion:
                                nullable: true
                                type: string
                              kind:
                                nullable: true
                                type: string
                              name:
                                nullable: true
                                type: string
                              namespace:
                                nullable: true
                                type: string
                              summary:
                                properties:
                                  error:
                                    type: boolean
                                  message:
                                    items:
                                      type: string
                                    type: array
                                  state:
                                    type: string
                                  transitioning:
                                    type: boolean
                                type: object
                              uid:
                                description: |-
                                  UID is a type that holds unique ID values, including UUIDs.  Because we
                                  don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                                  intent and helps make sure that UIDs and names do not get conflated.
                                nullable: true
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  notReady:
                    description: |-
                      NotReady is the number of bundle deployments that have been deployed
                      where some resources are not ready.
                    type: integer
                  outOfSync:
                    description: |-
                      OutOfSync is the number of bundle deployments that have been synced
                      from Fleet controller, but not yet by the downstream agent.
                    type: integer
                  pending:
                    description: |-
                      Pending is the number of bundle deployments that are being processed
                      by Fleet controller.
                    type: integer
                  ready:
                    description: |-
                      Ready is the number of bundle deployments that have been deployed
                      where all resources are ready.
                    type: integer
                  waitApplied:
                    description: |-
                      WaitApplied is the number of bundle deployments that have been
                      synced from Fleet controller and downstream cluster, but are waiting
                      to be deployed.
                    type: integer
                type: object
              unavailable:
                description: |-
                  Unavailable is the number of bundle deployments that are not ready or
                  where the AppliedDeploymentID in the status does not match the
                  DeploymentID from the spec.
                type: integer
              unavailablePartitions:
                description: UnavailablePartitions is the number of unavailable partitions.
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
